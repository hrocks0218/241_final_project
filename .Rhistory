rm(list=ls())
library(tidyverse)
library(data.table)
library(lmtest)
library(sandwich)
library(car)
library(gridExtra)
library(stargazer)
library(cowplot)
library(corrplot)
library(knitr)
stargazer_type = "text" # change to latex when ready to knit
library(openxlsx)
?read.xlsx()
pilot_panel1_raw = read.xlsx("./data/pilot/MF Framing Pilot - 9 Subject Recruitment - Panel 1_November 17, 2019_09.39.xlsx")
results_panel1_raw = read.xlsx("./data/pilot/survey_results_pilot_panel1.xlsx")
results_panel2_raw = read.xlsx("./data/pilot/survey_results_pilot_panel2.xlsx")
participant_detail_panel1 = read.csv("./data/pilot/participant_detail_pilot_panel1.csv")
participant_detail_panel2 = read.csv("./data/pilot/participant_detail_pilot_panel2.csv")
View(results_panel1_raw)
results_panel1_raw = read.xlsx("./data/pilot/survey_results_pilot_panel1.xlsx", startRow = 2)
View(results_panel1_raw)
View(participant_detail_panel2)
results_panel1_raw = read.xlsx("./data/pilot/survey_results_pilot_panel1.xlsx", startRow = 2)
results_panel2_raw = read.xlsx("./data/pilot/survey_results_pilot_panel2.xlsx", startRow = 2)
participant_detail_panel1 = read.csv("./data/pilot/participant_detail_pilot_panel1.csv")
participant_detail_panel2 = read.csv("./data/pilot/participant_detail_pilot_panel2.csv")
results_full = bind_rows(results_panel1_raw %>% mutate(panel = 1)
, results_panel2_raw %>% mutate(panel = 2))
colnames(results_panel1_raw)
?bind_rows
results_panel1_raw %>% mutate(panel = 1)
results_panel1_raw %>% mutate(panel = 1)
View(participant_detail_panel1)
View(results_panel1_raw)
results_panel1_raw = read.xlsx("./data/pilot/survey_results_pilot_panel1.xlsx")
View(results_panel1_raw)
results_panel1_raw = read.xlsx("./data/pilot/survey_results_pilot_panel1.xlsx") %>% filter(StartDate != "Start Date")
results_panel1_raw = read.xlsx("./data/pilot/survey_results_pilot_panel1.xlsx") %>% filter(StartDate != "Start Date")
results_panel2_raw = read.xlsx("./data/pilot/survey_results_pilot_panel2.xlsx") %>% filter(StartDate != "Start Date")
participant_detail_panel1 = read.csv("./data/pilot/participant_detail_pilot_panel1.csv")
participant_detail_panel2 = read.csv("./data/pilot/participant_detail_pilot_panel2.csv")
results_full = bind_rows(results_panel1_raw %>% mutate(panel = 1)
, results_panel2_raw %>% mutate(panel = 2))
results_full = bind_rows(results_panel1_raw %>% mutate(panel = 1)
, results_panel2_raw %>% mutate(panel = 2)) %>%
merge(participant_detail_panel1
, by.x = "PROLIFIC_PID"
, by.y = "participant_id"
, all.x = TRUE)
View(results_full)
results_full = bind_rows(results_panel1_raw %>% mutate(panel = 1)
, results_panel2_raw %>% mutate(panel = 2)) %>%
merge(bind_rows(participant_detail_panel1, participant_detail_panel2)
, by.x = "PROLIFIC_PID"
, by.y = "participant_id"
, all.x = TRUE)
results_full = bind_rows(results_panel1_raw %>% mutate(panel = 1)
, results_panel2_raw %>% mutate(panel = 2)) %>%
merge(bind_rows(participant_detail_panel1)
, by.x = "PROLIFIC_PID"
, by.y = "participant_id"
, all.x = TRUE) %>%
merge(bind_rows(participant_detail_panel2)
, by.x = "PROLIFIC_PID"
, by.y = "participant_id"
, all.x = TRUE)
View(results_full)
results_panel1_raw = read.xlsx("./data/pilot/survey_results_pilot_panel1.xlsx") %>% filter(StartDate != "Start Date")
results_panel2_raw = read.xlsx("./data/pilot/survey_results_pilot_panel2.xlsx") %>% filter(StartDate != "Start Date")
participant_detail_panel1 = read.csv("./data/pilot/participant_detail_pilot_panel1.csv", stringsAsFactors = FALSE)
participant_detail_panel2 = read.csv("./data/pilot/participant_detail_pilot_panel2.csv", stringsAsFactors = FALSE)
results_full = bind_rows(results_panel1_raw %>% mutate(panel = 1)
, results_panel2_raw %>% mutate(panel = 2)) %>%
merge(bind_rows(participant_detail_panel1, participant_detail_panel2)
, by.x = "PROLIFIC_PID"
, by.y = "participant_id"
, all.x = TRUE)
View(results_full)
colnames(results_full)
results_full = bind_rows(results_panel1_raw %>% mutate(panel = 1)
, results_panel2_raw %>% mutate(panel = 2)) %>%
mutate(arm = case_when(!is.blank(FC-B_1) ~ "purity_base"
, !is.blank(FC-C_1) ~ "purity_extension"
, !is.blank(FC-D_1) ~ "fairness_base"
,!is.blank(FC-E_1) ~ "fairness_extensiont"
, TRUE ~ "other")) %>%
merge(bind_rows(participant_detail_panel1, participant_detail_panel2)
, by.x = "PROLIFIC_PID"
, by.y = "participant_id"
, all.x = TRUE)
results_full = bind_rows(results_panel1_raw %>% mutate(panel = 1)
, results_panel2_raw %>% mutate(panel = 2)) %>%
mutate(arm = case_when(!is.null(FC-B_1) ~ "purity_base"
, !is.null(FC-C_1) ~ "purity_extension"
, !is.null(FC-D_1) ~ "fairness_base"
, !is.null(FC-E_1) ~ "fairness_extensiont"
, TRUE ~ "other")) %>%
merge(bind_rows(participant_detail_panel1, participant_detail_panel2)
, by.x = "PROLIFIC_PID"
, by.y = "participant_id"
, all.x = TRUE)
results_full = bind_rows(results_panel1_raw %>% mutate(panel = 1)
, results_panel2_raw %>% mutate(panel = 2)) %>%
mutate(arm = case_when(!is.null("FC-B_1") ~ "purity_base"
, !is.null("FC-C_1") ~ "purity_extension"
, !is.null("FC-D_1") ~ "fairness_base"
, !is.null("FC-E_1") ~ "fairness_extensiont"
, TRUE ~ "other")) %>%
merge(bind_rows(participant_detail_panel1, participant_detail_panel2)
, by.x = "PROLIFIC_PID"
, by.y = "participant_id"
, all.x = TRUE)
results_full = bind_rows(results_panel1_raw %>% mutate(panel = 1)
, results_panel2_raw %>% mutate(panel = 2)) %>%
mutate(arm = case_when(!is.null(`FC-B_1`) ~ "purity_base"
, !is.null(`FC-C_1`) ~ "purity_extension"
, !is.null(`FC-D_1`) ~ "fairness_base"
, !is.null(`FC-E_1`) ~ "fairness_extensiont"
, TRUE ~ "other")) %>%
merge(bind_rows(participant_detail_panel1, participant_detail_panel2)
, by.x = "PROLIFIC_PID"
, by.y = "participant_id"
, all.x = TRUE)
unique(results_full$arm)
results_full = bind_rows(results_panel1_raw %>% mutate(panel = 1)
, results_panel2_raw %>% mutate(panel = 2)) %>%
mutate(arm = case_when(length(`FC-B_1`)>1 ~ "purity_base"
, length(`FC-C_1`)>1 ~ "purity_extension"
, length(`FC-D_1`)>1 ~ "fairness_base"
, length(`FC-E_1`)>1 ~ "fairness_extensiont"
, TRUE ~ "other")) %>%
merge(bind_rows(participant_detail_panel1, participant_detail_panel2)
, by.x = "PROLIFIC_PID"
, by.y = "participant_id"
, all.x = TRUE)
unique(results_full$arm)
results_full = bind_rows(results_panel1_raw %>% mutate(panel = 1)
, results_panel2_raw %>% mutate(panel = 2)) %>%
mutate(arm = case_when(grepl('a', `FC-B_1`) ~ "purity_base"
, grepl('a', `FC-C_1`) ~ "purity_extension"
, grepl('a', `FC-D_1`) ~ "fairness_base"
, grepl('a', `FC-E_1`) ~ "fairness_extensiont"
, TRUE ~ "other")) %>%
merge(bind_rows(participant_detail_panel1, participant_detail_panel2)
, by.x = "PROLIFIC_PID"
, by.y = "participant_id"
, all.x = TRUE)
results_full = bind_rows(results_panel1_raw %>% mutate(panel = 1)
, results_panel2_raw %>% mutate(panel = 2)) %>%
mutate(arm = case_when(grepl('a', `FC-B_1`) ~ "purity_base"
, grepl('a', `FC-C_1`) ~ "purity_extension"
, grepl('a', `FC-D_1`) ~ "fairness_base"
, grepl('a', `FC-E_1`) ~ "fairness_extensiont"
, TRUE ~ "other")) %>%
merge(bind_rows(participant_detail_panel1, participant_detail_panel2)
, by.x = "PROLIFIC_PID"
, by.y = "participant_id"
, all.x = TRUE)
results_full = bind_rows(results_panel1_raw %>% mutate(panel = 1)
, results_panel2_raw %>% mutate(panel = 2)) %>%
mutate(arm = case_when(grepl('a', `FC-B_1`) ~ "purity_base"
, grepl('a', `FC-C_1`) ~ "purity_extension"
, grepl('a', `FC-D_1`) ~ "fairness_base"
, grepl('a', `FC-E_1`) ~ "fairness_extension"
, TRUE ~ "other")) %>%
merge(bind_rows(participant_detail_panel1, participant_detail_panel2)
, by.x = "PROLIFIC_PID"
, by.y = "participant_id"
, all.x = TRUE) %>%
select(`FC-B_1`, `FC-C_1`, `FC-D_1`, `FC-E_1`, arm)
View(results_full)
results_full = bind_rows(results_panel1_raw %>% mutate(panel = 1)
, results_panel2_raw %>% mutate(panel = 2)) %>%
mutate(arm = case_when(grepl('aA', `FC-B_1`) ~ "purity_base"
, grepl('aA', `FC-C_1`) ~ "purity_extension"
, grepl('aA', `FC-D_1`) ~ "fairness_base"
, grepl('aA', `FC-E_1`) ~ "fairness_extension"
, TRUE ~ "other")) %>%
merge(bind_rows(participant_detail_panel1, participant_detail_panel2)
, by.x = "PROLIFIC_PID"
, by.y = "participant_id"
, all.x = TRUE) %>%
select(`FC-B_1`, `FC-C_1`, `FC-D_1`, `FC-E_1`, arm)
View(results_full)
?grepl
results_full = bind_rows(results_panel1_raw %>% mutate(panel = 1)
, results_panel2_raw %>% mutate(panel = 2)) %>%
mutate(arm = case_when(grepl('a', `FC-B_1`, ignore.case = TRUE) ~ "purity_base"
, grepl('a', `FC-C_1`, ignore.case = TRUE) ~ "purity_extension"
, grepl('a', `FC-D_1`, ignore.case = TRUE) ~ "fairness_base"
, grepl('a', `FC-E_1`, ignore.case = TRUE) ~ "fairness_extension"
, TRUE ~ "other")) %>%
merge(bind_rows(participant_detail_panel1, participant_detail_panel2)
, by.x = "PROLIFIC_PID"
, by.y = "participant_id"
, all.x = TRUE) %>%
select(`FC-B_1`, `FC-C_1`, `FC-D_1`, `FC-E_1`, arm)
View(results_full)
results_full = bind_rows(results_panel1_raw %>% mutate(panel = 1)
, results_panel2_raw %>% mutate(panel = 2)) %>%
mutate(arm = case_when(grepl('a', `FC-B_1`, ignore.case = TRUE) ~ "purity_base"
, grepl('a', `FC-C_1`, ignore.case = TRUE) ~ "purity_extension"
, grepl('a', `FC-D_1`, ignore.case = TRUE) ~ "fairness_base"
, grepl('a', `FC-E_1`, ignore.case = TRUE) ~ "fairness_extension"
, TRUE ~ "other")) %>%
merge(bind_rows(participant_detail_panel1, participant_detail_panel2)
, by.x = "PROLIFIC_PID"
, by.y = "participant_id"
, all.x = TRUE)
install.packages("DiagrammeR")
rm(list=ls())
library(openxlsx)
library(tidyverse)
library(data.table)
library(DiagrammeR)
library(lmtest)
library(sandwich)
library(car)
library(gridExtra)
library(stargazer)
library(cowplot)
library(corrplot)
library(knitr)
stargazer_type = "text" # change to latex when ready to knit
results_full %>%
group_by(arm, panel)
results_full = bind_rows(results_panel1_raw %>% mutate(panel = 1)
, results_panel2_raw %>% mutate(panel = 2)) %>%
mutate(arm = case_when(grepl('a', `FC-B_1`, ignore.case = TRUE) ~ "purity_base"
, grepl('a', `FC-C_1`, ignore.case = TRUE) ~ "purity_extension"
, grepl('a', `FC-D_1`, ignore.case = TRUE) ~ "fairness_base"
, grepl('a', `FC-E_1`, ignore.case = TRUE) ~ "fairness_extension"
, TRUE ~ "other")) %>%
merge(bind_rows(participant_detail_panel1, participant_detail_panel2)
, by.x = "PROLIFIC_PID"
, by.y = "participant_id"
, all.x = TRUE)
results_panel1_raw = read.xlsx("./data/pilot/survey_results_pilot_panel1.xlsx") %>% filter(StartDate != "Start Date")
results_panel2_raw = read.xlsx("./data/pilot/survey_results_pilot_panel2.xlsx") %>% filter(StartDate != "Start Date")
participant_detail_panel1 = read.csv("./data/pilot/participant_detail_pilot_panel1.csv", stringsAsFactors = FALSE)
participant_detail_panel2 = read.csv("./data/pilot/participant_detail_pilot_panel2.csv", stringsAsFactors = FALSE)
results_full = bind_rows(results_panel1_raw %>% mutate(panel = 1)
, results_panel2_raw %>% mutate(panel = 2)) %>%
mutate(arm = case_when(grepl('a', `FC-B_1`, ignore.case = TRUE) ~ "purity_base"
, grepl('a', `FC-C_1`, ignore.case = TRUE) ~ "purity_extension"
, grepl('a', `FC-D_1`, ignore.case = TRUE) ~ "fairness_base"
, grepl('a', `FC-E_1`, ignore.case = TRUE) ~ "fairness_extension"
, TRUE ~ "other")) %>%
merge(bind_rows(participant_detail_panel1, participant_detail_panel2)
, by.x = "PROLIFIC_PID"
, by.y = "participant_id"
, all.x = TRUE)
results_full %>%
group_by(arm, panel)
results_full %>%
group_by(arm, panel) %>%
summarise(count = .N)
results_full %>%
group_by(arm, panel) %>%
summarise(count = n())
arm_counts = results_full %>%
group_by(arm, panel) %>%
summarise(count = n())
View(arm_counts)
arm_counts = results_full %>%
group_by(arm, panel) %>%
summarise(count = n())
grViz("digraph flowchart {
# node definitions with substituted label text
node [fontname = Helvetica, shape = rectangle]
tab1 [label = '@@1']
tab2 [label = '@@2']
tab3 [label = '@@3']
tab4 [label = '@@4']
tab5 [label = '@@5']
tab6 [label = '@@6']
tab7 [label = '@@7']
tab8 [label = '@@8']
tab9 [label = '@@9']
tab10 [label = '@@10']
tab11 [label = '@@11']
# edge definitions with the node IDs
tab1 -> tab2;
tab1 -> tab7;
tab2 -> tab3 -> tab5;
tab3 -> tab4;
tab5 -> tab6;
tab7 -> tab8 -> tab10;
tab8 -> tab9;
tab10 -> tab11;
}
[1]: 'Total n=24 participants'
[2]: 'Liberals n=12'
[3]: 'Purity n=8'
[4]: 'Purity (extension) n=4'
[5]: 'Fairness n=4'
[6]: 'Fairness (extension) n=4'
[7]: 'Conservatives n=12'
[8]: 'Purity n=8'
[9]: 'Purity (extension) n=4'
[10]: 'Fairness n=4'
[11]: 'Fairness (extension) n=4'
")
arm_counts = results_full %>%
group_by(arm, panel) %>%
summarise(count = n())
grViz("digraph flowchart {
# node definitions with substituted label text
node [fontname = Helvetica, shape = rectangle]
tab1 [label = '@@1']
tab2 [label = '@@2']
tab3 [label = '@@3']
tab4 [label = '@@4']
tab5 [label = '@@5']
tab6 [label = '@@6']
tab7 [label = '@@7']
tab8 [label = '@@8']
tab9 [label = '@@9']
tab10 [label = '@@10']
tab11 [label = '@@11']
# edge definitions with the node IDs
tab1 -> tab2 -> tab3 -> tab4;
tab1 -> tab2 -> tab5 -> tab6;
tab1 -> tab7 -> tab8 -> tab9;
tab1 -> tab7 -> tab10 -> tab11;
}
[1]: 'Total n=24 participants'
[2]: 'Liberals n=12'
[3]: 'Purity n=8'
[4]: 'Purity (extension) n=4'
[5]: 'Fairness n=4'
[6]: 'Fairness (extension) n=4'
[7]: 'Conservatives n=12'
[8]: 'Purity n=8'
[9]: 'Purity (extension) n=4'
[10]: 'Fairness n=4'
[11]: 'Fairness (extension) n=4'
")
colnames(results_full)
scatterplotMatrix(~Age+Gender+Urban+PoliSpect, data = results_full)
# scatterplotMatrix(~Age+Gender+Urban+PoliSpect, data = results_full)
results_full %>% select(Age, Gender, Urban, PoliSpect)
# Age, Gender, Urban, PoliSpect
age_breakdown = results_full %>%
group_by(Age, PoliSpect) %>%
summarise(count = n())
ggplot(data = age_breakdown, aes(x = Age, y = count, group = PoliSpect)) %>%
geom_bar()
# Age, Gender, Urban, PoliSpect
age_breakdown = results_full %>%
group_by(Age, PoliSpect) %>%
summarise(count = n())
ggplot(data = age_breakdown, aes(x = Age, y = count, group = PoliSpect)) +
geom_bar()
# Age, Gender, Urban, PoliSpect
age_breakdown = results_full %>%
group_by(Age, PoliSpect) %>%
summarise(count = n())
ggplot(data = age_breakdown, aes(x = Age, y = count, fill = PoliSpect)) +
geom_bar()
# Age, Gender, Urban, PoliSpect
age_breakdown = results_full %>%
group_by(Age, PoliSpect) %>%
summarise(count = n())
ggplot(data = age_breakdown, aes(x = Age, y = count, fill = PoliSpect)) +
geom_bar(stat="identity")
# Age, Gender, Urban, PoliSpect
age_breakdown = results_full %>%
group_by(Age, PoliSpect) %>%
summarise(count = n())
ggplot(data = age_breakdown, aes(x = Age, y = count, fill = PoliSpect)) +
geom_bar(stat="identity")
?scale_fill_brewer
# Age, Gender, Urban, PoliSpect
age_breakdown = results_full %>%
group_by(Age, PoliSpect) %>%
summarise(count = n())
ggplot(data = age_breakdown, aes(x = Age, y = count, fill = PoliSpect)) +
geom_bar(stat="identity") %>%
scale_fill_brewer(type = "div", palette = 1, direction = 1, aesthetics = "fill")
# Age, Gender, Urban, PoliSpect
age_breakdown = results_full %>%
group_by(Age, PoliSpect) %>%
summarise(count = n())
ggplot(data = age_breakdown, aes(x = Age, y = count, fill = PoliSpect)) +
geom_bar(stat="identity") +
scale_fill_brewer(type = "div", palette = 1, direction = 1, aesthetics = "fill")
# Age, Gender, Urban, PoliSpect
age_breakdown = results_full %>%
group_by(Age, PoliSpect) %>%
summarise(count = n())
ggplot(data = age_breakdown, aes(x = Age, y = count, fill = PoliSpect)) +
geom_bar(stat="identity") +
scale_fill_brewer(type = "div", palette = 2, direction = 1, aesthetics = "fill")
# Age, Gender, Urban, PoliSpect
age_breakdown = results_full %>%
group_by(Age, PoliSpect) %>%
summarise(count = n())
ggplot(data = age_breakdown, aes(x = Age, y = count, fill = PoliSpect)) +
geom_bar(stat="identity") +
scale_fill_brewer(type = "div", palette = 3, direction = 1, aesthetics = "fill")
# Age, Gender, Urban, PoliSpect
age_breakdown = results_full %>%
group_by(Age, PoliSpect) %>%
summarise(count = n())
ggplot(data = age_breakdown, aes(x = Age, y = count, fill = PoliSpect)) +
geom_bar(stat="identity") +
scale_fill_brewer(type = "div", palette = 4, direction = 1, aesthetics = "fill")
# Age, Gender, Urban, PoliSpect
age_breakdown = results_full %>%
group_by(Age, PoliSpect) %>%
summarise(count = n())
ggplot(data = age_breakdown, aes(x = Age, y = count, fill = PoliSpect)) +
geom_bar(stat="identity") +
scale_fill_brewer(type = "div", palette = 5, direction = 1, aesthetics = "fill")
# Age, Gender, Urban, PoliSpect
ideology_levels = c("Very Liberal", "Lean Liberal", "Liberal", "Moderate", "Conservative", "Lean Conservative", "Very Conservative")
age_breakdown = results_full %>%
group_by(Age, PoliSpect) %>%
summarise(count = n()) %>%
mutate(PoliSpect_factor = factor(PoliSpect, levels = ideology_levels))
ggplot(data = age_breakdown, aes(x = Age, y = count, fill = PoliSpect_factor)) +
geom_bar(stat="identity") +
scale_fill_brewer(type = "div", palette = 5, direction = 1, aesthetics = "fill")
# Age, Gender, Urban, PoliSpect
ideology_levels = c("Very Liberal", "Lean Liberal", "Liberal", "Moderate", "Conservative", "Lean Conservative", "Very Conservative")
age_breakdown = results_full %>%
group_by(Age, PoliSpect) %>%
summarise(count = n()) %>%
mutate(PoliSpect_factor = factor(PoliSpect, levels = ideology_levels))
ggplot(data = age_breakdown, aes(x = Age, y = count, fill = PoliSpect_factor)) +
geom_bar(stat="identity") +
scale_fill_brewer(type = "div", palette = 5, direction = -1, aesthetics = "fill")
