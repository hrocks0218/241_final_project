, purity_q1_self, purity_q2_repulsed, purity_q3_injustice, purity_q4_relieved
, fairness_q1_self, fairness_q2_pain, fairness_q3_injustice, fairness_q4_relieved) %>%
gather(prompt, value, -panel, -arm) %>%
filter(!is.na(value)) %>%
group_by(panel, arm, prompt, value) %>% summarise(count = n()) #%>%
# spread(value, count) %>%
# arrange(panel, arm, prompt) %>%
# select("panel", "arm", "prompt", "A great deal", "A lot", "A moderate amount", "A little", "None at all")
ggplot(data = results_response
, aes(x = prompt, y = value, fill = count)) +
geom_tile() +
facet_grid(rows = vars(arm), cols = vars(panel)) +
scale_fill_distiller(direction = 1) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Histogram of familiarity
ggplot(data = results_clean %>% group_by(ubi_familiarity, ideology, panel) %>% summarise(count = n())
, aes(x = ubi_familiarity, y = count, fill = ideology)) +
geom_bar(stat="identity") +
facet_grid( ~ panel) +
scale_fill_brewer(type = "div", palette = 5, direction = -1, aesthetics = "fill") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Heat map of number UBI like
ggplot(data = results_clean %>% group_by(ubi_familiarity, ideology) %>% summarise(ubi_number_avg = mean(ubi_number))
, aes(x = ubi_familiarity, y = ideology, fill = ubi_number_avg)) +
geom_tile() +
scale_fill_distiller(direction = 1) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
my_lm_calcs = function(lm_in, clusters_in){
# Robust
vcov_robust = vcovHC(lm_in)
se_robust = sqrt(diag(vcov_robust))
# Cluster
if(length(clusters_in) > 1){
vcov_cluster = cluster.vcov(lm_in, clusters_in)
se_cluster = sqrt(diag(vcov_cluster))
} else {
vcov_cluster = NA
se_cluster = NA
}
# Output
lm_out = list(lm = lm_in
, vcov_robust = vcov_robust
, se_robust = se_robust
, vcov_cluster = vcov_cluster
, se_cluster = se_cluster
)
return(lm_out)
}
# Summaries
all_data = data.table(results_full)
all_data[ , .(ubi=mean(as.numeric(ubi_2))), by=list(panel, arm) ]
all_data[, ideology_bin := case_when(is.na(ideology) ~ "missing",
ideology=="Very Liberal" ~ "liberal",
ideology=="Lean Liberal" ~ "liberal",
ideology=="Liberal" ~ "liberal",
ideology=="Very Conservative" ~ "conservative",
ideology=="Lean Conservative" ~ "conservative",
ideology=="Conservative" ~ "conservative",
TRUE ~ "moderate"), ]
all_data[, story := case_when(is.na(arm) ~ "missing",
arm=="control" ~ "",
arm=="purity_base" ~ "homeless",
arm=="purity_extension" ~ "homeless-cleaned",
arm=="care_base" ~ "bullying",
arm=="care_extension" ~ "bullying-addressed",
TRUE ~ "others"), ]
all_data[, FemaleReader := ifelse(gender!='Male', 1, 0), ]
all_data[, ubi := as.numeric(ubi_2), ]
# augment model with results from coefteest and coefci using
# the supplied variance/covariance matrix
apply_robust_estimates = function(model, vcovmatrix) {
model$robust.coeftest = coeftest(model, vcov. = vcovmatrix)
model$robust.estimate = model$robust.coeftest[, 'Estimate']
model$robust.std.error = model$robust.coeftest[, 'Std. Error']
model$robust.statistic = model$robust.coeftest[, 't value']
model$robust.p.value = model$robust.coeftest[, 'Pr(>|t|)']
model$robust.coefci = coefci(model, vcov. = vcovmatrix)
model$robust.ci.low = model$robust.coefci[, "2.5 %"]
model$robust.ci.high = model$robust.coefci[, "97.5 %"]
model
}
# liberals - homeless story
hom_lib_mod<-all_data[ ideology_bin=='liberal' & story != 'bullying' & story != 'bullying-addressed',  lm(ubi~story*FemaleReader)]
hom_lib_mod<-apply_robust_estimates(hom_lib_mod, vcovHC(hom_lib_mod))
# conservatives - homeless story
hom_con_mod<-all_data[ ideology_bin=='conservative' & story != 'bullying' & story != 'bullying-addressed',  lm(ubi~story*FemaleReader)]
hom_con_mod<-apply_robust_estimates(hom_con_mod, vcovHC(hom_con_mod))
# liberals - jacket story
jac_lib_mod<-all_data[ ideology_bin=='liberal' & story != 'homeless' & story != 'homeless-cleaned',  lm(ubi~story*FemaleReader)]
jac_lib_mod<-apply_robust_estimates(jac_lib_mod, vcovHC(jac_lib_mod))
# conservatives - jacket story
jac_con_mod<-all_data[ ideology_bin=='conservative' & story != 'homeless' & story != 'homeless-cleaned',  lm(ubi~story*FemaleReader)]
jac_con_mod<-apply_robust_estimates(jac_con_mod, vcovHC(jac_con_mod))
stargazer(hom_lib_mod, hom_con_mod,
type = 'text',
se = list(sqrt(diag(vcovHC(hom_lib_mod))),
sqrt(diag(vcovHC(hom_con_mod)))),
header=F,
report=('v*c*sp'),
add.lines=list(c("Ideology", "Liberal", "Conservative")))
stargazer(jac_lib_mod, jac_con_mod,
type = 'text',
se = list(sqrt(diag(vcovHC(jac_lib_mod))),
sqrt(diag(vcovHC(jac_con_mod)))),
header=F,
report=('v*c*sp'),
add.lines=list(c("Ideology", "Liberal", "Conservative")))
# Exploratory
model1_liberal = my_lm_calcs(lm_in = lm(ubi_number ~ arm, data = results_clean %>% filter(ideology_bin == 'liberal')), clusters_in = NA)
model1_conservative = my_lm_calcs(lm_in = lm(ubi_number ~ arm, data = results_clean %>% filter(ideology_bin == 'conservative')), clusters_in = NA)
stargazer(model1_liberal$lm, model1_conservative$lm
, type = stargazer_type, header = F
, se = list(model1_liberal$se_robust, model1_conservative$se_robust)
, title = "Moral Foundations Prelim Regression Specifications"
, column.labels = c("Liberals", "Conservative")
, notes = "HC Robust Standard Errors"
, report = ('v*c*sp')
)
model_1 = lm(ubi_number ~ arm+ideology_bin, data = results_full)
stargazer(model_1, type = stargazer_type)
model1_liberal_gender = my_lm_calcs(lm_in = lm(ubi_number ~ arm*gender, data = results_clean %>% filter(ideology_bin == 'liberal')), clusters_in = NA)
model1_conservative_gender = my_lm_calcs(lm_in = lm(ubi_number ~ arm*gender, data = results_clean %>% filter(ideology_bin == 'conservative')), clusters_in = NA)
stargazer(model1_liberal_gender$lm, model1_conservative_gender$lm
, type = stargazer_type, header = F
, se = list(model1_liberal_gender$se_robust, model1_conservative_gender$se_robust)
, title = "Moral Foundations Prelim Regression Specifications"
, column.labels = c("Liberals", "Conservative")
, notes = "HC Robust Standard Errors"
, report = ('v*c*sp')
)
# Stargazer
rm(list=ls())
packages = c('openxlsx'
, 'tidyverse', 'data.table'
, 'visNetwork'
, 'lmtest', 'sandwich', 'car'
, 'gridExtra', 'stargazer', 'cowplot', 'corrplot'
, 'knitr')
lapply(packages, library, character.only = TRUE)
stargazer_type = "text" # change to latex when ready to knit
# Pilot
# results_panel1_raw = read.xlsx("./data/pilot/survey_results_pilot_panel1.xlsx") %>% filter(StartDate != "Start Date")
# results_panel2_raw = read.xlsx("./data/pilot/survey_results_pilot_panel2.xlsx") %>% filter(StartDate != "Start Date")
# participant_detail_panel1 = read.csv("./data/pilot/participant_detail_pilot_panel1.csv", stringsAsFactors = FALSE)
# participant_detail_panel2 = read.csv("./data/pilot/participant_detail_pilot_panel2.csv", stringsAsFactors = FALSE)
# Study
results_panel1_raw = read.xlsx("./data/study/MF Framing Pilot - Full Recruitment - Panel 1_November 20, 2019_07.25.xlsx") %>% filter(!grepl("Start|Import", StartDate))
results_panel2_raw = read.xlsx("./data/study/MF Framing Pilot - Full Recruitment - Panel 2_November 20, 2019_07.26.xlsx") %>% filter(!grepl("Start|Import", StartDate))
participant_detail_panel1 = read.csv("./data/study/prolific_export_5dd4a350108b6748b25b5de1.csv", stringsAsFactors = FALSE)
participant_detail_panel2 = read.csv("./data/study/prolific_export_5dd4a34135582248315dfdca.csv", stringsAsFactors = FALSE)
# Stack panel data
results_stacked = bind_rows(results_panel1_raw %>% mutate(panel = 1)
, results_panel2_raw %>% mutate(panel = 2)) %>%
merge(bind_rows(participant_detail_panel1, participant_detail_panel2) %>% select(-session_id, -status, -age)
, by.x = "PROLIFIC_PID"
, by.y = "participant_id"
, all.x = TRUE)
# Adjust all variable names to remove '-' and '.' + lowercase
names(results_stacked) = tolower(gsub(x = names(results_stacked), pattern = "\\-|\\.", replacement = "_"))
# Discrete variables as factors (manual ordering for plotting)
ideology_levels = c("Very Liberal", "Lean Liberal", "Liberal", "Moderate", "Conservative", "Lean Conservative", "Very Conservative")
ubi_group_levels = c("Promoter", "Passive", "Detractor")
ubi_familiarity_levels = c("Extremely familiar", "Very familiar", "Moderately familiar", "Slightly familiar", "Not familiar at all")
results_full = results_stacked  %>%
# Define arms and nodes
mutate(arm = case_when(grepl('a', fc_b_1, ignore.case = TRUE) ~ "purity_base"
, grepl('a', fc_c_1, ignore.case = TRUE) ~ "purity_extension"
, grepl('a', fc_d_1, ignore.case = TRUE) ~ "fairness_base"
, grepl('a', fc_e_1, ignore.case = TRUE) ~ "fairness_extension"
, TRUE ~ "control") %>% factor()
, node = paste0(arm, "_panel_", panel)
# Combine reaction vars from different arms
, purity_q1_self = case_when(grepl('a', fc_b_1, ignore.case = TRUE) ~ fc_b_1
, TRUE ~ fc_c_1)
, purity_q2_repulsed = case_when(grepl('a', fc_b_2, ignore.case = TRUE) ~ fc_b_2
, TRUE ~ fc_c_2)
, purity_q3_injustice = case_when(grepl('a', fc_b_3, ignore.case = TRUE) ~ fc_b_3
, TRUE ~ fc_c_3)
, purity_q4_relieved = fc_c_4
, fairness_q1_self = case_when(grepl('a', fc_d_1, ignore.case = TRUE) ~ fc_d_1
, TRUE ~ fc_e_1)
, fairness_q2_pain = case_when(grepl('a', fc_d_2, ignore.case = TRUE) ~ fc_d_2
, TRUE ~ fc_e_2)
, fairness_q3_injustice = case_when(grepl('a', fc_d_3, ignore.case = TRUE) ~ fc_d_3
, TRUE ~ fc_e_3)
, fairness_q4_relieved = fc_e_4
, open_text_reaction = q3_fc2
# Factor variables
, ideology = factor(polispect, levels = ideology_levels)
, ideology_bin = case_when(is.na(ideology) ~ "missing"
, ideology == "Very Liberal" ~ "liberal"
, ideology == "Lean Liberal" ~ "liberal"
, ideology == "Liberal" ~ "liberal"
, ideology == "Very Conservative" ~ "conservative"
, ideology == "Lean Conservative" ~ "conservative"
, ideology == "Conservative" ~ "conservative"
, TRUE ~ "moderate")
, ubi_group = factor(ubi_2_nps_group, levels = ubi_group_levels)
, ubi_familiarity = factor(ubi_f, levels = ubi_familiarity_levels)
# Numeric variables
, ubi_number = as.numeric(ubi_2))
results_clean = results_full %>%
select(prolific_pid, panel, arm, node
, ideology, ideology_bin, age, gender, urban, employment_status, student_status
, purity_q1_self, purity_q2_repulsed, purity_q3_injustice, purity_q4_relieved
, fairness_q1_self, fairness_q2_pain, fairness_q3_injustice, fairness_q4_relieved
, open_text_reaction
, ubi_number, ubi_group, ubi_familiarity)
arm_counts = results_clean %>%
group_by(arm, panel, node) %>%
summarise(count = n())
nodes = data.frame(
id = 1:12
, group = c("liberal", "conservative", arm_counts$arm)
, label = c("liberal", "conservative", arm_counts$node)
, value = c(sum(arm_counts$count[arm_counts$panel==1]), sum(arm_counts$count[arm_counts$panel==2]), arm_counts$count)
# color, title, shape
)
edges = data.frame(
from = c(1, 2, 1, 2, 1, 2,  5, 6, 9,  10)
, to = c(3, 4, 5, 6, 9, 10, 7, 8, 11, 12)
)
visNetwork(nodes, edges) %>%
visHierarchicalLayout()
grpstackbar_plot = ggplot() +
facet_grid( ~ panel) +
scale_fill_brewer(type = "div", palette = 5, direction = -1, aesthetics = "fill") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Ideology
grpstackbar_plot +
geom_bar(data = results_clean %>%  group_by(ideology, panel) %>% summarise(count = n())
, aes(x = ideology, y = count, fill = ideology)
, stat = "identity")
# Age
grpstackbar_plot +
geom_bar(data = results_clean %>%  group_by(age, ideology, panel) %>% summarise(count = n())
, aes(x = age, y = count, fill = ideology)
, stat = "identity")
# Gender
grpstackbar_plot +
geom_bar(data = results_clean %>%  group_by(gender, ideology, panel) %>% summarise(count = n())
, aes(x = gender, y = count, fill = ideology)
, stat = "identity")
# Urban
grpstackbar_plot +
geom_bar(data = results_clean %>%  group_by(urban, ideology, panel) %>% summarise(count = n())
, aes(x = urban, y = count, fill = ideology)
, stat = "identity")
results_response = results_clean %>%
select(panel, arm
, purity_q1_self, purity_q2_repulsed, purity_q3_injustice, purity_q4_relieved
, fairness_q1_self, fairness_q2_pain, fairness_q3_injustice, fairness_q4_relieved) %>%
gather(prompt, value, -panel, -arm) %>%
filter(!is.na(value)) %>%
group_by(panel, arm, prompt, value) %>% summarise(count = n()) #%>%
# spread(value, count) %>%
# arrange(panel, arm, prompt) %>%
# select("panel", "arm", "prompt", "A great deal", "A lot", "A moderate amount", "A little", "None at all")
ggplot(data = results_response
, aes(x = prompt, y = value, fill = count)) +
geom_tile() +
facet_grid(rows = vars(arm), cols = vars(panel)) +
scale_fill_distiller(direction = 1) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Histogram of familiarity
ggplot(data = results_clean %>% group_by(ubi_familiarity, ideology, panel) %>% summarise(count = n())
, aes(x = ubi_familiarity, y = count, fill = ideology)) +
geom_bar(stat="identity") +
facet_grid( ~ panel) +
scale_fill_brewer(type = "div", palette = 5, direction = -1, aesthetics = "fill") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Heat map of number UBI like
ggplot(data = results_clean %>% group_by(ubi_familiarity, ideology) %>% summarise(ubi_number_avg = mean(ubi_number))
, aes(x = ubi_familiarity, y = ideology, fill = ubi_number_avg)) +
geom_tile() +
scale_fill_distiller(direction = 1) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
my_lm_calcs = function(lm_in, clusters_in){
# Robust
vcov_robust = vcovHC(lm_in)
se_robust = sqrt(diag(vcov_robust))
# Cluster
if(length(clusters_in) > 1){
vcov_cluster = cluster.vcov(lm_in, clusters_in)
se_cluster = sqrt(diag(vcov_cluster))
} else {
vcov_cluster = NA
se_cluster = NA
}
# Output
lm_out = list(lm = lm_in
, vcov_robust = vcov_robust
, se_robust = se_robust
, vcov_cluster = vcov_cluster
, se_cluster = se_cluster
)
return(lm_out)
}
# Summaries
all_data = data.table(results_full)
all_data[, ideology_bin := case_when(is.na(ideology) ~ "missing",
ideology=="Very Liberal" ~ "liberal",
ideology=="Lean Liberal" ~ "liberal",
ideology=="Liberal" ~ "liberal",
ideology=="Very Conservative" ~ "conservative",
ideology=="Lean Conservative" ~ "conservative",
ideology=="Conservative" ~ "conservative",
TRUE ~ "moderate"), ]
all_data[, story := case_when(is.na(arm) ~ "missing",
arm=="control" ~ "",
arm=="purity_base" ~ "homeless",
arm=="purity_extension" ~ "homeless-cleaned",
arm=="fairness_base" ~ "bullying",
arm=="fairness_extension" ~ "bullying-addressed",
TRUE ~ "others"), ]
all_data[, FemaleReader := ifelse(gender!='Male', 1, 0), ]
all_data[, ubi := as.numeric(ubi_2), ]
all_data[ , .(ubi=mean(as.numeric(ubi_2)), .N), keyby=list(ideology_bin, story, FemaleReader) ]
# augment model with results from coefteest and coefci using
# the supplied variance/covariance matrix
apply_robust_estimates = function(model, vcovmatrix) {
model$robust.coeftest = coeftest(model, vcov. = vcovmatrix)
model$robust.estimate = model$robust.coeftest[, 'Estimate']
model$robust.std.error = model$robust.coeftest[, 'Std. Error']
model$robust.statistic = model$robust.coeftest[, 't value']
model$robust.p.value = model$robust.coeftest[, 'Pr(>|t|)']
model$robust.coefci = coefci(model, vcov. = vcovmatrix)
model$robust.ci.low = model$robust.coefci[, "2.5 %"]
model$robust.ci.high = model$robust.coefci[, "97.5 %"]
model
}
# liberals - homeless story
hom_lib_mod<-all_data[ ideology_bin=='liberal' & story != 'bullying' & story != 'bullying-addressed',  lm(ubi~story*FemaleReader)]
hom_lib_mod<-apply_robust_estimates(hom_lib_mod, vcovHC(hom_lib_mod))
# conservatives - homeless story
hom_con_mod<-all_data[ ideology_bin=='conservative' & story != 'bullying' & story != 'bullying-addressed',  lm(ubi~story*FemaleReader)]
hom_con_mod<-apply_robust_estimates(hom_con_mod, vcovHC(hom_con_mod))
# liberals - jacket story
jac_lib_mod<-all_data[ ideology_bin=='liberal' & story != 'homeless' & story != 'homeless-cleaned',  lm(ubi~story*FemaleReader)]
jac_lib_mod<-apply_robust_estimates(jac_lib_mod, vcovHC(jac_lib_mod))
# conservatives - jacket story
jac_con_mod<-all_data[ ideology_bin=='conservative' & story != 'homeless' & story != 'homeless-cleaned',  lm(ubi~story*FemaleReader)]
jac_con_mod<-apply_robust_estimates(jac_con_mod, vcovHC(jac_con_mod))
stargazer(hom_lib_mod, hom_con_mod,
type = 'text',
se = list(sqrt(diag(vcovHC(hom_lib_mod))),
sqrt(diag(vcovHC(hom_con_mod)))),
header=F,
report=('v*c*sp'),
add.lines=list(c("Ideology", "Liberal", "Conservative")))
stargazer(jac_lib_mod, jac_con_mod,
type = 'text',
se = list(sqrt(diag(vcovHC(jac_lib_mod))),
sqrt(diag(vcovHC(jac_con_mod)))),
header=F,
report=('v*c*sp'),
add.lines=list(c("Ideology", "Liberal", "Conservative")))
# Exploratory
model1_liberal = my_lm_calcs(lm_in = lm(ubi_number ~ arm, data = results_clean %>% filter(ideology_bin == 'liberal')), clusters_in = NA)
model1_conservative = my_lm_calcs(lm_in = lm(ubi_number ~ arm, data = results_clean %>% filter(ideology_bin == 'conservative')), clusters_in = NA)
stargazer(model1_liberal$lm, model1_conservative$lm
, type = stargazer_type, header = F
, se = list(model1_liberal$se_robust, model1_conservative$se_robust)
, title = "Moral Foundations Prelim Regression Specifications"
, column.labels = c("Liberals", "Conservative")
, notes = "HC Robust Standard Errors"
, report = ('v*c*sp')
)
model_1 = lm(ubi_number ~ arm+ideology_bin, data = results_full)
stargazer(model_1, type = stargazer_type)
model1_liberal_gender = my_lm_calcs(lm_in = lm(ubi_number ~ arm*gender, data = results_clean %>% filter(ideology_bin == 'liberal')), clusters_in = NA)
model1_conservative_gender = my_lm_calcs(lm_in = lm(ubi_number ~ arm*gender, data = results_clean %>% filter(ideology_bin == 'conservative')), clusters_in = NA)
stargazer(model1_liberal_gender$lm, model1_conservative_gender$lm
, type = stargazer_type, header = F
, se = list(model1_liberal_gender$se_robust, model1_conservative_gender$se_robust)
, title = "Moral Foundations Prelim Regression Specifications"
, column.labels = c("Liberals", "Conservative")
, notes = "HC Robust Standard Errors"
, report = ('v*c*sp')
)
# Stargazer
# Stack panel data
results_stacked = bind_rows(results_panel1_raw %>% mutate(panel = 1)
, results_panel2_raw %>% mutate(panel = 2)) %>%
merge(bind_rows(participant_detail_panel1, participant_detail_panel2) %>% select(-session_id, -status, -age)
, by.x = "PROLIFIC_PID"
, by.y = "participant_id"
, all.x = TRUE)
# Adjust all variable names to remove '-' and '.' + lowercase
names(results_stacked) = tolower(gsub(x = names(results_stacked), pattern = "\\-|\\.", replacement = "_"))
# Discrete variables as factors (manual ordering for plotting)
ideology_levels = c("Very Liberal", "Lean Liberal", "Liberal", "Moderate", "Conservative", "Lean Conservative", "Very Conservative")
ubi_group_levels = c("Promoter", "Passive", "Detractor")
ubi_familiarity_levels = c("Extremely familiar", "Very familiar", "Moderately familiar", "Slightly familiar", "Not familiar at all")
results_full = results_stacked  %>%
# Define arms and nodes
mutate(arm = case_when(grepl('a', fc_b_1, ignore.case = TRUE) ~ "purity_base"
, grepl('a', fc_c_1, ignore.case = TRUE) ~ "purity_extension"
, grepl('a', fc_d_1, ignore.case = TRUE) ~ "fairness_base"
, grepl('a', fc_e_1, ignore.case = TRUE) ~ "fairness_extension"
, TRUE ~ "control") %>% factor()
, node = paste0(arm, "_panel_", panel)
# Combine reaction vars from different arms
, purity_q1_self = case_when(grepl('a', fc_b_1, ignore.case = TRUE) ~ fc_b_1
, TRUE ~ fc_c_1)
, purity_q2_repulsed = case_when(grepl('a', fc_b_2, ignore.case = TRUE) ~ fc_b_2
, TRUE ~ fc_c_2)
, purity_q3_injustice = case_when(grepl('a', fc_b_3, ignore.case = TRUE) ~ fc_b_3
, TRUE ~ fc_c_3)
, purity_q4_relieved = fc_c_4
, fairness_q1_self = case_when(grepl('a', fc_d_1, ignore.case = TRUE) ~ fc_d_1
, TRUE ~ fc_e_1)
, fairness_q2_pain = case_when(grepl('a', fc_d_2, ignore.case = TRUE) ~ fc_d_2
, TRUE ~ fc_e_2)
, fairness_q3_injustice = case_when(grepl('a', fc_d_3, ignore.case = TRUE) ~ fc_d_3
, TRUE ~ fc_e_3)
, fairness_q4_relieved = fc_e_4
, open_text_reaction = q3_fc2
# Factor variables
, ideology = factor(polispect, levels = ideology_levels)
, ideology_bin = case_when(is.na(ideology) ~ "missing"
, ideology == "Very Liberal" ~ "liberal"
, ideology == "Lean Liberal" ~ "liberal"
, ideology == "Liberal" ~ "liberal"
, ideology == "Very Conservative" ~ "conservative"
, ideology == "Lean Conservative" ~ "conservative"
, ideology == "Conservative" ~ "conservative"
, TRUE ~ "moderate")
, ubi_group = factor(ubi_2_nps_group, levels = ubi_group_levels)
, ubi_familiarity = factor(ubi_f, levels = ubi_familiarity_levels)
, ubi_familiarity_bin = case_when(is.na(ubi_f) ~ "missing"
, ubi_f == "Not familiar at all" ~ "no"
, TRUE ~ "yes")
# Numeric variables
, ubi_number = as.numeric(ubi_2))
results_clean = results_full %>%
select(prolific_pid, panel, arm, node
, ideology, ideology_bin, age, gender, urban, employment_status, student_status
, purity_q1_self, purity_q2_repulsed, purity_q3_injustice, purity_q4_relieved
, fairness_q1_self, fairness_q2_pain, fairness_q3_injustice, fairness_q4_relieved
, open_text_reaction
, ubi_number, ubi_group, ubi_familiarity)
# Summaries
all_data = data.table(results_full)
all_data[, ideology_bin := case_when(is.na(ideology) ~ "missing",
ideology=="Very Liberal" ~ "liberal",
ideology=="Lean Liberal" ~ "liberal",
ideology=="Liberal" ~ "liberal",
ideology=="Very Conservative" ~ "conservative",
ideology=="Lean Conservative" ~ "conservative",
ideology=="Conservative" ~ "conservative",
TRUE ~ "moderate"), ]
all_data[, story := case_when(is.na(arm) ~ "missing",
arm=="control" ~ "",
arm=="purity_base" ~ "homeless",
arm=="purity_extension" ~ "homeless-cleaned",
arm=="fairness_base" ~ "bullying",
arm=="fairness_extension" ~ "bullying-addressed",
TRUE ~ "others"), ]
all_data[, FemaleReader := ifelse(gender!='Male', 1, 0), ]
all_data[, ubi_familiarity_dummy := ifelse(ubi_familiarity_bin!='yes', 1, 0), ]
all_data[, ubi := as.numeric(ubi_2), ]
all_data[ , .(ubi=mean(as.numeric(ubi_2)), .N), keyby=list(ideology_bin, story, FemaleReader) ]
# augment model with results from coefteest and coefci using
# the supplied variance/covariance matrix
# liberals - homeless story
hom_lib_mod_2<-all_data[ ideology_bin=='liberal' & story != 'bullying' & story != 'bullying-addressed',  lm(ubi~story*ubi_familiarity_dummy)]
hom_lib_mod_2<-apply_robust_estimates(hom_lib_mod_2, vcovHC(hom_lib_mod_2))
# conservatives - homeless story
hom_con_mod_2<-all_data[ ideology_bin=='conservative' & story != 'bullying' & story != 'bullying-addressed',  lm(ubi~story*ubi_familiarity_dummy)]
hom_con_mod_2<-apply_robust_estimates(hom_con_mod_2, vcovHC(hom_con_mod_2))
# liberals - jacket story
jac_lib_mod_2<-all_data[ ideology_bin=='liberal' & story != 'homeless' & story != 'homeless-cleaned',  lm(ubi~story*ubi_familiarity_dummy)]
jac_lib_mod_2<-apply_robust_estimates(jac_lib_mod_2, vcovHC(jac_lib_mod_2))
# conservatives - jacket story
jac_con_mod_2<-all_data[ ideology_bin=='conservative' & story != 'homeless' & story != 'homeless-cleaned',  lm(ubi~story*ubi_familiarity_dummy)]
jac_con_mod_2<-apply_robust_estimates(jac_con_mod_2, vcovHC(jac_con_mod_2))
stargazer(hom_lib_mod_2, hom_con_mod_2,
type = 'text',
se = list(sqrt(diag(vcovHC(hom_lib_mod_2))),
sqrt(diag(vcovHC(hom_con_mod_2)))),
header=F,
report=('v*c*sp'),
add.lines=list(c("Ideology", "Liberal", "Conservative")))
stargazer(jac_lib_mod_2, jac_con_mod_2,
type = 'text',
se = list(sqrt(diag(vcovHC(jac_lib_mod_2))),
sqrt(diag(vcovHC(jac_con_mod_2)))),
header=F,
report=('v*c*sp'),
add.lines=list(c("Ideology", "Liberal", "Conservative")))
stargazer(hom_lib_mod_2, hom_con_mod_2,
type = 'text',
se = list(sqrt(diag(vcovHC(hom_lib_mod_2))),
sqrt(diag(vcovHC(hom_con_mod_2)))),
header=F,
report=('v*c*sp'),
add.lines=list(c("Ideology", "Liberal", "Conservative")))
stargazer(jac_lib_mod_2, jac_con_mod_2,
type = 'text',
se = list(sqrt(diag(vcovHC(jac_lib_mod_2))),
sqrt(diag(vcovHC(jac_con_mod_2)))),
header=F,
report=('v*c*sp'),
add.lines=list(c("Ideology", "Liberal", "Conservative")))
View(all_data)
all_data %>% filter(ideology_bin == "liberal" & ubi_familiarity_bin == 1)
test = all_data %>% filter(ideology_bin == "liberal" & ubi_familiarity_bin == 1)
test2 = all_data %>% select(ideology_bin, ubi_familiarity_bin)
View(test2)
test = all_data %>% filter(ideology_bin == "liberal" & ubi_familiarity_dummy == 1)
View(test)
